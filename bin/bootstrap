#!/usr/bin/env bash -euo pipefail

: ${SSH_KEY_FILENAME:=~/.ssh/id_rsa}
: ${GITHUB_REPOSITORY:=git@github.com:mendable/config.git}
: ${INSTALL_DIR:=~/.config.d}

install_brew() {
  echo "Installing Brew.."
  $(command -v brew >/dev/null 2>&1) || /usr/bin/ruby -e "$(curl \
    -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

install_ansible() {
  echo "Installing Ansible.."
  $(command -v ansible >/dev/null 2>&1) || brew install ansible
}

add_ssh_key_to_remote() {
  echo "Please add your SSH key to Github now."
  while true; do
    read -p  "Do you want us to open Github in a browser for you? " yn
    case $yn in
      [Yy]* ) open "https://github.com/settings/keys"; break;;
      [Nn]* ) break;;
      * ) echo "Please answer yes or no.";;
    esac
  done

  assert_ssh_key_in_remote
}

assert_ssh_key_in_remote() {
  while true; do
    read -p "Is your SSH key already in GitHub? " yn
    case $yn in
      [Yy]* ) break;;
      [Nn]* ) add_ssh_key_to_remote; break;;
      * ) echo "Please answer yes or no.";;
    esac
  done
}

configure_ssh_key() {
  echo "Configuring SSH Key.."
  if [ ! -f $SSH_KEY_FILENAME ]; then
    ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILENAME
    eval "$(ssh-agent -s)"
    ssh-add -K $SSH_KEY_FILENAME
    assert_ssh_key_in_remote
  fi
}

clone_config_repository() {
  echo "Cloning config repository.."
  if [ ! -d $INSTALL_DIR ]; then
    git clone $GITHUB_REPOSITORY $INSTALL_DIR
  else
    (cd $INSTALL_DIR && git checkout master && git pull)
  fi
}

create_update_symlink() {
  echo "Creating global update symlink"
  if [ ! -f /usr/local/bin/update ]; then
    ln -s $INSTALL_DIR/bin/update /usr/local/bin/update
   fi
 }

update() {
  echo "Running update.."
  $INSTALL_DIR/bin/update
}

echo "CONFIG: "
echo "  SSH Key: ${SSH_KEY_FILENAME}"
echo "  Source Repository: ${GITHUB_REPOSITORY}"
echo "  Install Directory: ${INSTALL_DIR}"
echo "----"

configure_ssh_key
install_brew
install_ansible
clone_config_repository
create_update_symlink
update
